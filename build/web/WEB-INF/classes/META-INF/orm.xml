<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm
                                     http://xmlns.jcp.org/xml/ns/persistence/orm_2_0.xsd" version="2.1">
    <named-native-query name="PeminjamanJSON" result-set-mapping="PeminjamanMapping">
        <query>SELECT COUNT(*) jumlah, `tgl_pinjam` FROM peminjaman_detail pd, peminjaman_master pm WHERE pm.no_transaksi = pd.no_transaksi GROUP BY tgl_pinjam</query>
    </named-native-query>

    <sql-result-set-mapping name="PeminjamanMapping">
        <constructor-result target-class="com.project.models.Peminjaman">
            <column name="jumlah"/>
            <column name="tgl_pinjam"/>
        </constructor-result>
    </sql-result-set-mapping>

    <named-native-query name="GenderJSON" result-set-mapping="GenderMapping">
        <query>SELECT COUNT(*) value, gender label FROM `anggota` GROUP BY gender</query>
    </named-native-query>

    <sql-result-set-mapping name="GenderMapping">
        <constructor-result target-class="com.project.models.Gender">
            <column name="value"/>
            <column name="label"/>
        </constructor-result>
    </sql-result-set-mapping>

    <named-native-query name="AnggotaJSON" result-set-mapping="AnggotaMapping">
        <query>
            SELECT tgl_daftar,
            (SELECT COUNT(*) FROM anggota WHERE tgl_daftar &lt;= luar.tgl_daftar) AS jumlah,
            (SELECT COUNT(*) FROM anggota WHERE tgl_daftar &lt;= luar.tgl_daftar AND gender = 'L') AS pria,
            (SELECT COUNT(*) FROM anggota WHERE tgl_daftar &lt;= luar.tgl_daftar AND gender = 'P') AS wanita
            FROM anggota luar GROUP BY tgl_daftar
        </query>
    </named-native-query>

    <sql-result-set-mapping name="AnggotaMapping">
        <constructor-result target-class="com.project.models.Anggota">
            <column name="tgl_daftar"/>
            <column name="jumlah"/>
            <column name="pria"/>
            <column name="wanita"/>
        </constructor-result>
    </sql-result-set-mapping>

    <named-native-query name="UmurAnggotaJSON" result-set-mapping="UmurAnggotaMapping">
        <query>
            SELECT CASE
            WHEN age &lt; 20 THEN '&lt; 20'
            WHEN age BETWEEN 20 and 29 THEN '20 - 29'
            WHEN age BETWEEN 30 and 39 THEN '30 - 39'
            WHEN age BETWEEN 40 and 49 THEN '40 - 49'
            WHEN age BETWEEN 50 and 59 THEN '50 - 59'
            WHEN age BETWEEN 60 and 69 THEN '60 - 69'
            WHEN age BETWEEN 70 and 79 THEN '70 - 79'
            WHEN age &gt;= 80 THEN '&gt; 80'
            WHEN age IS NULL THEN 'NULL'
            END as age_range, COUNT(*) AS count,
            CASE WHEN age &lt; 20 THEN 1
            WHEN age BETWEEN 20 and 29 THEN 2
            WHEN age BETWEEN 30 and 39 THEN 3
            WHEN age BETWEEN 40 and 49 THEN 4
            WHEN age BETWEEN 50 and 59 THEN 5
            WHEN age BETWEEN 60 and 69 THEN 6
            WHEN age BETWEEN 70 and 79 THEN 7
            WHEN age &gt;= 80 THEN 8
            WHEN age IS NULL THEN 9 END as ordinal
            FROM (SELECT TIMESTAMPDIFF(YEAR, tgl_lahir, CURDATE()) AS age FROM anggota) as derived
            GROUP by age_range ORDER by ordinal
        </query>
    </named-native-query>

    <sql-result-set-mapping name="UmurAnggotaMapping">
        <constructor-result target-class="com.project.models.UmurAnggota">
            <column name="age_range"/>
            <column name="count"/>
            <column name="ordinal"/>
        </constructor-result>
    </sql-result-set-mapping>

    <named-native-query name="DataBukuJSON" result-set-mapping="DataMapping">
        <query>SELECT id, judul as value FROM buku WHERE status = 0</query>
    </named-native-query>

    <named-native-query name="DataAnggotaJSON" result-set-mapping="DataMapping">
        <query>SELECT id, nama as value FROM anggota</query>
    </named-native-query>

    <sql-result-set-mapping name="DataMapping">
        <constructor-result target-class="com.project.models.Data">
            <column name="id"/>
            <column name="value"/>
        </constructor-result>
    </sql-result-set-mapping>

</entity-mappings>